### Starting build.
# Target: Main.ml.depends, tags: { extension:ml, file:Main.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Main.ml > Main.ml.depends # cached
# Target: Compile.ml.depends, tags: { extension:ml, file:Compile.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Compile.ml > Compile.ml.depends # cached
# Target: Ast.ml.depends, tags: { extension:ml, file:Ast.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Ast.ml > Ast.ml.depends # cached
# Target: Ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Ast.cmo, file:Ast.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o Ast.cmo Ast.ml # cached
# Target: InstructionSet.ml.depends, tags: { extension:ml, file:InstructionSet.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules InstructionSet.ml > InstructionSet.ml.depends # cached
# Target: InstructionSet.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:InstructionSet.cmo, file:InstructionSet.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o InstructionSet.cmo InstructionSet.ml # cached
# Target: Compile.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Compile.cmo, file:Compile.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o Compile.cmo Compile.ml # cached
# Target: Lexer.mll, tags: { extension:mll, file:Lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q Lexer.mll # cached
# Target: Lexer.ml.depends, tags: { extension:ml, file:Lexer.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Lexer.ml > Lexer.ml.depends # cached
# Target: Parser.mly.depends, tags: { extension:mly, file:Parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' Parser.mly > Parser.mly.depends # cached
# Target: Parser.mly, tags: { byte, compile, extension:ml, extension:mly, file:Parser.ml, file:Parser.mly, infer, menhir, ocaml, parser, quiet }
menhir --ocamlc 'ocamlfind ocamlc -w -8' --infer Parser.mly # cached
# Target: Parser.mli.depends, tags: { extension:mli, file:Parser.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser.mli > Parser.mli.depends # cached
# Target: Parser.cmi, tags: { byte, compile, extension:mli, file:Parser.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o Parser.cmi Parser.mli # cached
# Target: Lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Lexer.cmo, file:Lexer.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o Lexer.cmo Lexer.ml # cached
# Target: VM.ml.depends, tags: { extension:ml, file:VM.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules VM.ml > VM.ml.depends # cached
# Target: VM.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:VM.cmo, file:VM.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o VM.cmo VM.ml # cached
# Target: Main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Main.cmo, file:Main.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w -8 -o Main.cmo Main.ml # cached
# Target: Ast.cmx, tags: { compile, extension:cmx, extension:ml, file:Ast.cmx, file:Ast.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o Ast.cmx Ast.ml # cached
# Target: InstructionSet.cmx, tags: { compile, extension:cmx, extension:ml, file:InstructionSet.cmx, file:InstructionSet.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o InstructionSet.cmx InstructionSet.ml # cached
# Target: Compile.cmx, tags: { compile, extension:cmx, extension:ml, file:Compile.cmx, file:Compile.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o Compile.cmx Compile.ml # cached
# Target: Parser.ml.depends, tags: { extension:ml, file:Parser.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser.ml > Parser.ml.depends # cached
# Target: Parser.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser.cmx, file:Parser.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o Parser.cmx Parser.ml # cached
# Target: Lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:Lexer.cmx, file:Lexer.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o Lexer.cmx Lexer.ml # cached
# Target: VM.cmx, tags: { compile, extension:cmx, extension:ml, file:VM.cmx, file:VM.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o VM.cmx VM.ml # cached
# Target: Main.cmx, tags: { compile, extension:cmx, extension:ml, file:Main.cmx, file:Main.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w -8 -o Main.cmx Main.ml # cached
# Target: Main.native, tags: { dont_link_with, extension:native, file:Main.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt -linkpkg Ast.cmx InstructionSet.cmx Compile.cmx Parser.cmx Lexer.cmx VM.cmx Main.cmx -o Main.native # cached
# Compilation successful.
