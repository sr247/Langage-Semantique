# 1 "Lexer.mll"
 
  open Lexing
  open Parser

  let id_or_keyword =
    let h = Hashtbl.create 17 in
    List.iter (fun (k, t) -> Hashtbl.add h k t)
      [ "let",  LET;
	"in",   IN;
	"fun",  FUN;
	"if",   IF;
	"then", THEN;
	"else", ELSE;
	"while", WHILE;
	"do",   DO;
	"done", DONE;
	"ref",  REF;
	"spawn", SPAWN;
      ] ;
    fun s ->
      try Hashtbl.find h s
      with Not_found -> IDENT(s)

# 26 "Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\240\255\241\255\001\000\244\255\245\255\247\255\248\255\
    \002\000\250\255\000\000\252\255\026\000\015\000\002\000\246\255\
    \242\255\243\255\005\000\253\255\254\255\017\000\255\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\014\000\255\255\255\255\255\255\255\255\
    \006\000\255\255\004\000\255\255\002\000\001\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\002\000\255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\000\000\
    \000\000\000\000\019\000\000\000\000\000\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\014\000\014\000\014\000\014\000\014\000\000\000\014\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\004\000\014\000\000\000\000\000\000\000\000\000\000\000\
    \008\000\007\000\009\000\011\000\016\000\010\000\017\000\021\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\022\000\005\000\003\000\006\000\015\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\014\000\014\000\000\000\255\255\014\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\014\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\008\000\000\000\003\000\018\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\021\000\000\000\000\000\000\000\010\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\018\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 29 "Lexer.mll"
                           ( token lexbuf      )
# 135 "Lexer.ml"

  | 1 ->
# 30 "Lexer.mll"
           ( INT(int_of_string(lexeme lexbuf)) )
# 140 "Lexer.ml"

  | 2 ->
# 31 "Lexer.mll"
           ( id_or_keyword(lexeme lexbuf)      )
# 145 "Lexer.ml"

  | 3 ->
# 32 "Lexer.mll"
         ( PLUS  )
# 150 "Lexer.ml"

  | 4 ->
# 33 "Lexer.mll"
         ( MINUS )
# 155 "Lexer.ml"

  | 5 ->
# 34 "Lexer.mll"
         ( STAR  )
# 160 "Lexer.ml"

  | 6 ->
# 35 "Lexer.mll"
         ( LP    )
# 165 "Lexer.ml"

  | 7 ->
# 36 "Lexer.mll"
         ( RP    )
# 170 "Lexer.ml"

  | 8 ->
# 37 "Lexer.mll"
         ( EQ    )
# 175 "Lexer.ml"

  | 9 ->
# 38 "Lexer.mll"
         ( ARROW )
# 180 "Lexer.ml"

  | 10 ->
# 39 "Lexer.mll"
         ( SEMI  )
# 185 "Lexer.ml"

  | 11 ->
# 40 "Lexer.mll"
         ( BANG  )
# 190 "Lexer.ml"

  | 12 ->
# 41 "Lexer.mll"
         ( SET   )
# 195 "Lexer.ml"

  | 13 ->
# 42 "Lexer.mll"
         ( comment lexbuf; token lexbuf )
# 200 "Lexer.ml"

  | 14 ->
# 43 "Lexer.mll"
         ( failwith ("Unknown character : " ^ (lexeme lexbuf)) )
# 205 "Lexer.ml"

  | 15 ->
# 44 "Lexer.mll"
         ( EOF   )
# 210 "Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 18
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 47 "Lexer.mll"
         ( () )
# 222 "Lexer.ml"

  | 1 ->
# 48 "Lexer.mll"
         ( failwith "Open comment" )
# 227 "Lexer.ml"

  | 2 ->
# 49 "Lexer.mll"
         ( comment lexbuf )
# 232 "Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

